"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var path = require('path');
module.exports = function (_a) {
    var _b = _a.platform, platform = _b === void 0 ? 'github' : _b, options = __rest(_a, ["platform"]);
    var platformAPI = {
        'github': '@vssue/api-github-v3',
        'gitlab': '@vssue/api-gitlab-v4',
        'bitbucket': '@vssue/api-bitbucket-v2',
    };
    var apiPkg = platformAPI[platform];
    if (!apiPkg) {
        throw new Error("[@vssue/vuepress-plugin-vssue] Platform '" + platform + "' is not supported. Available platforms: github, gitlab, bitbucket.");
    }
    try {
        require.resolve(apiPkg);
    }
    catch (e) {
        throw new Error("[@vssue/vuepress-plugin-vssue] " + apiPkg + " is not installed. Run 'npm install " + apiPkg + "' or 'yarn add " + apiPkg + "' to install it.");
    }
    return {
        name: 'vssue',
        enhanceAppFiles: [
            path.resolve(__dirname, 'enhanceApp.js'),
        ],
        define: {
            'VSSUE_OPTIONS': JSON.stringify(options),
        },
        alias: {
            '@vssue/api$': require.resolve(apiPkg),
        },
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQTtBQUU1QixNQUFNLENBQUMsT0FBTyxHQUFHLFVBQUMsRUFHakI7SUFGQyxJQUFBLGdCQUFtQixFQUFuQix3Q0FBbUIsRUFDbkIsa0NBQVU7SUFFVixJQUFNLFdBQVcsR0FBRztRQUNsQixRQUFRLEVBQUUsc0JBQXNCO1FBQ2hDLFFBQVEsRUFBRSxzQkFBc0I7UUFDaEMsV0FBVyxFQUFFLHlCQUF5QjtLQUN2QyxDQUFBO0lBRUQsSUFBTSxNQUFNLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFBO0lBRXBDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDWCxNQUFNLElBQUksS0FBSyxDQUFDLDhDQUE0QyxRQUFRLHdFQUFxRSxDQUFDLENBQUE7S0FDM0k7SUFFRCxJQUFJO1FBQ0YsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQTtLQUN4QjtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsTUFBTSxJQUFJLEtBQUssQ0FBQyxvQ0FBa0MsTUFBTSw0Q0FBdUMsTUFBTSx1QkFBa0IsTUFBTSxxQkFBa0IsQ0FBQyxDQUFBO0tBQ2pKO0lBRUQsT0FBTztRQUNMLElBQUksRUFBRSxPQUFPO1FBRWIsZUFBZSxFQUFFO1lBQ2YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsZUFBZSxDQUFDO1NBQ3pDO1FBRUQsTUFBTSxFQUFFO1lBQ04sZUFBZSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDO1NBQ3pDO1FBRUQsS0FBSyxFQUFFO1lBQ0wsYUFBYSxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1NBQ3ZDO0tBQ0YsQ0FBQTtBQUNILENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcblxubW9kdWxlLmV4cG9ydHMgPSAoe1xuICBwbGF0Zm9ybSA9ICdnaXRodWInLFxuICAuLi5vcHRpb25zXG59KSA9PiB7XG4gIGNvbnN0IHBsYXRmb3JtQVBJID0ge1xuICAgICdnaXRodWInOiAnQHZzc3VlL2FwaS1naXRodWItdjMnLFxuICAgICdnaXRsYWInOiAnQHZzc3VlL2FwaS1naXRsYWItdjQnLFxuICAgICdiaXRidWNrZXQnOiAnQHZzc3VlL2FwaS1iaXRidWNrZXQtdjInLFxuICB9XG5cbiAgY29uc3QgYXBpUGtnID0gcGxhdGZvcm1BUElbcGxhdGZvcm1dXG5cbiAgaWYgKCFhcGlQa2cpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFtAdnNzdWUvdnVlcHJlc3MtcGx1Z2luLXZzc3VlXSBQbGF0Zm9ybSAnJHtwbGF0Zm9ybX0nIGlzIG5vdCBzdXBwb3J0ZWQuIEF2YWlsYWJsZSBwbGF0Zm9ybXM6IGdpdGh1YiwgZ2l0bGFiLCBiaXRidWNrZXQuYClcbiAgfVxuXG4gIHRyeSB7XG4gICAgcmVxdWlyZS5yZXNvbHZlKGFwaVBrZylcbiAgfSBjYXRjaCAoZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgW0B2c3N1ZS92dWVwcmVzcy1wbHVnaW4tdnNzdWVdICR7YXBpUGtnfSBpcyBub3QgaW5zdGFsbGVkLiBSdW4gJ25wbSBpbnN0YWxsICR7YXBpUGtnfScgb3IgJ3lhcm4gYWRkICR7YXBpUGtnfScgdG8gaW5zdGFsbCBpdC5gKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAndnNzdWUnLFxuXG4gICAgZW5oYW5jZUFwcEZpbGVzOiBbXG4gICAgICBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnZW5oYW5jZUFwcC5qcycpLFxuICAgIF0sXG5cbiAgICBkZWZpbmU6IHtcbiAgICAgICdWU1NVRV9PUFRJT05TJzogSlNPTi5zdHJpbmdpZnkob3B0aW9ucyksXG4gICAgfSxcblxuICAgIGFsaWFzOiB7XG4gICAgICAnQHZzc3VlL2FwaSQnOiByZXF1aXJlLnJlc29sdmUoYXBpUGtnKSxcbiAgICB9LFxuICB9XG59XG4iXX0=