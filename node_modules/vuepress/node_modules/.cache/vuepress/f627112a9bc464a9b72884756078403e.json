{"remainingRequest":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/vuepress-theme-reco/pages/Page/index.vue?vue&type=style&index=0&id=78981f00&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/vuepress-theme-reco/pages/Page/index.vue","mtime":499162500000},{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/css-loader/index.js","mtime":1554890279328},{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '../../styles/config.styl'\n@require '../../styles/wrapper.styl'\n\n.page\n  padding-bottom 2rem\n\n.page-title\n  max-width: 740px;\n  margin: 6rem auto 0;\n\n.page-edit\n  @extend $wrapper\n  padding-top 1rem\n  padding-bottom 1rem\n  overflow auto\n  .edit-link\n    display inline-block\n    a\n      color lighten($textColor, 25%)\n      margin-right 0.25rem\n  .last-updated\n    float right\n    font-size 0.9em\n    .prefix\n      font-weight 500\n      color lighten($textColor, 25%)\n    .time\n      font-weight 400\n      color #aaa\n\n.page-nav\n  @extend $wrapper\n  padding-top 1rem\n  padding-bottom 0\n  .inner\n    min-height 2rem\n    margin-top 0\n    border-top 1px solid $borderColor\n    padding-top 1rem\n    overflow auto // clear float\n  .next\n    float right\n\n@media (max-width: $MQMobile)\n  .page-edit\n    .edit-link\n      margin-bottom .5rem\n    .last-updated\n      font-size .8em\n      float none\n      text-align left\n  .page-title\n    padding: 0 1rem;    \n    .tags\n      display block\n      margin-top 1rem;\n      margin-left: 0!important;    \n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkOA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vuepress-theme-reco/pages/Page","sourcesContent":["<template>\n  <div class=\"page\">\n    <slot name=\"top\"/>\n    <div class=\"page-title\" v-if=\"!(isCategories || isTags || isTimeLine)\">\n      <h1>{{$page.title}}</h1>\n      <hr>\n      <PageInfo :pageInfo=\"$page\" @currentTag=\"getCurrentTag\"></PageInfo>\n    </div>\n    <Content :custom=\"false\"/>\n    <category v-if=\"isCategories\" :currentPage=\"currentPage\" @currentTag=\"getCurrentTag\"></category>\n    <tag v-if=\"isTags\" :tag=\"currentTag\" @tagChange=\"$emit('tagChange')\"></tag>\n    <time-line v-if=\"isTimeLine\"></time-line>\n    <div class=\"page-edit\">\n      <div\n        class=\"edit-link\"\n        v-if=\"editLink\">\n        <a\n          :href=\"editLink\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">{{ editLinkText }}</a>\n        <OutboundLink/>\n      </div>\n\n      <div\n        class=\"last-updated\"\n        v-if=\"lastUpdated\">\n        <span class=\"prefix\">{{ lastUpdatedText }}: </span>\n        <span class=\"time\">{{ lastUpdated }}</span>\n      </div>\n    </div>\n\n    <div class=\"page-nav\" v-if=\"prev || next\">\n      <p class=\"inner\">\n        <span\n          v-if=\"prev\"\n          class=\"prev\">\n          ←\n          <router-link\n            v-if=\"prev\"\n            class=\"prev\"\n            :to=\"prev.path\">\n            {{ prev.title || prev.path }}\n          </router-link>\n        </span>\n\n        <span\n          v-if=\"next\"\n          class=\"next\">\n          <router-link\n            v-if=\"next\"\n            :to=\"next.path\">\n            {{ next.title || next.path }}\n          </router-link>\n          →\n        </span>\n      </p>\n    </div>\n\n    <slot name=\"bottom\"/>\n  </div>\n</template>\n\n<script>\nimport { resolvePage, normalize, outboundRE, endingSlashRE } from '../../util/'\nimport Category from '../../components/Category/'\nimport PageInfo from '../../components/PageInfo/'\nimport Tag from '../../components/Tag/'\nimport TimeLine from '../../components/TimeLine/'\n\nexport default {\n  name: 'Page',\n  data () {\n    return {\n      currentTag: '',\n      currentPage: 1\n    }\n  },\n  props: ['sidebarItems'],\n  computed: {\n    isCategories () {\n      return this.$page.frontmatter.isCategories\n    },\n    isTags () {\n      return this.$page.frontmatter.isTags\n    },\n    isTimeLine () {\n      return this.$page.frontmatter.isTimeLine\n    },\n    lastUpdated () {\n      if (this.$page.lastUpdated) {\n        return new Date(this.$page.lastUpdated).toLocaleString(this.$lang)\n      }\n    },\n\n    lastUpdatedText () {\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\n        return this.$themeLocaleConfig.lastUpdated\n      }\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\n        return this.$site.themeConfig.lastUpdated\n      }\n      return 'Last Updated'\n    },\n\n    prev () {\n      const prev = this.$page.frontmatter.prev\n      if (prev === false) {\n        return\n      } else if (prev) {\n        return resolvePage(this.$site.pages, prev, this.$route.path)\n      } else {\n        return resolvePrev(this.$page, this.sidebarItems)\n      }\n    },\n\n    next () {\n      const next = this.$page.frontmatter.next\n      if (next === false) {\n        return\n      } else if (next) {\n        return resolvePage(this.$site.pages, next, this.$route.path)\n      } else {\n        return resolveNext(this.$page, this.sidebarItems)\n      }\n    },\n\n    editLink () {\n      if (this.$page.frontmatter.editLink === false) {\n        return\n      }\n      const {\n        repo,\n        editLinks,\n        docsDir = '',\n        docsBranch = 'master',\n        docsRepo = repo\n      } = this.$site.themeConfig\n\n      let path = normalize(this.$page.path)\n      if (endingSlashRE.test(path)) {\n        path += 'README.md'\n      } else {\n        path += '.md'\n      }\n      if (docsRepo && editLinks) {\n        return this.createEditLink(repo, docsRepo, docsDir, docsBranch, path)\n      }\n    },\n\n    editLinkText () {\n      return (\n        this.$themeLocaleConfig.editLinkText ||\n        this.$site.themeConfig.editLinkText ||\n        `Edit this page`\n      )\n    },\n  },\n  beforeUpdate () {\n    this.$page.currentPage = 1\n  },\n  methods: {\n    createEditLink (repo, docsRepo, docsDir, docsBranch, path) {\n      const bitbucket = /bitbucket.org/\n      if (bitbucket.test(repo)) {\n        const base = outboundRE.test(docsRepo)\n          ? docsRepo\n          : repo\n        return (\n          base.replace(endingSlashRE, '') +\n           `/${docsBranch}` +\n           (docsDir ? '/' + docsDir.replace(endingSlashRE, '') : '') +\n           path +\n           `?mode=edit&spa=0&at=${docsBranch}&fileviewer=file-view-default`\n        )\n      }\n\n      const base = outboundRE.test(docsRepo)\n        ? docsRepo\n        : `https://github.com/${docsRepo}`\n\n      return (\n        base.replace(endingSlashRE, '') +\n        `/edit/${docsBranch}` +\n        (docsDir ? '/' + docsDir.replace(endingSlashRE, '') : '') +\n        path\n      )\n    },\n    getCurrentTag (tag) {\n      this.currentTag = tag\n    }\n  },\n  components: {\n    Category,\n    Tag,\n    PageInfo,\n    TimeLine\n  }\n}\n\nfunction resolvePrev (page, items) {\n  return find(page, items, -1)\n}\n\nfunction resolveNext (page, items) {\n  return find(page, items, 1)\n}\n\nfunction find (page, items, offset) {\n  const res = []\n  items.forEach(item => {\n    if (item.type === 'group') {\n      res.push(...item.children || [])\n    } else {\n      res.push(item)\n    }\n  })\n  for (let i = 0; i < res.length; i++) {\n    const cur = res[i]\n    if (cur.type === 'page' && cur.path === page.path) {\n      return res[i + offset]\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n@import '../../styles/config.styl'\n@require '../../styles/wrapper.styl'\n\n.page\n  padding-bottom 2rem\n\n.page-title\n  max-width: 740px;\n  margin: 6rem auto 0;\n\n.page-edit\n  @extend $wrapper\n  padding-top 1rem\n  padding-bottom 1rem\n  overflow auto\n  .edit-link\n    display inline-block\n    a\n      color lighten($textColor, 25%)\n      margin-right 0.25rem\n  .last-updated\n    float right\n    font-size 0.9em\n    .prefix\n      font-weight 500\n      color lighten($textColor, 25%)\n    .time\n      font-weight 400\n      color #aaa\n\n.page-nav\n  @extend $wrapper\n  padding-top 1rem\n  padding-bottom 0\n  .inner\n    min-height 2rem\n    margin-top 0\n    border-top 1px solid $borderColor\n    padding-top 1rem\n    overflow auto // clear float\n  .next\n    float right\n\n@media (max-width: $MQMobile)\n  .page-edit\n    .edit-link\n      margin-bottom .5rem\n    .last-updated\n      font-size .8em\n      float none\n      text-align left\n  .page-title\n    padding: 0 1rem;    \n    .tags\n      display block\n      margin-top 1rem;\n      margin-left: 0!important;    \n</style>\n"]}]}