{"remainingRequest":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/vuepress-theme-reco/Layout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/vuepress-theme-reco/Layout.vue","mtime":499162500000},{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hujiangjun/Desktop/dev/blog-vuepress/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from \"vue\";\nimport nprogress from \"nprogress\";\nimport Home from \"./pages/Home/\";\nimport Navbar from \"./components/Navbar/\";\nimport Page from \"./pages/Page/\";\nimport Sidebar from \"./components/Sidebar/\";\nimport SWUpdatePopup from \"./components/SWUpdatePopup/\";\nimport { resolveSidebarItems } from \"./util/\"\nimport BackToTop from \"./components/BackToTop/\"\nimport Valine from './components/Valine/'\nimport Password from './components/Password/'\n\nexport default {\n  components: { Home, Page, Sidebar, Navbar, SWUpdatePopup, BackToTop, Valine, Password },\n\n  data() {\n    return {\n      isSidebarOpen: false,\n      swUpdateEvent: null,\n      valineRefresh: false,\n      isHasKey: true\n    };\n  },\n\n  computed: {\n    shouldShowNavbar() {\n      const { themeConfig } = this.$site;\n      const { frontmatter } = this.$page;\n      if (frontmatter.navbar === false || themeConfig.navbar === false) {\n        return false;\n      }\n      return (\n        this.$title ||\n        themeConfig.logo ||\n        themeConfig.repo ||\n        themeConfig.nav ||\n        this.$themeLocaleConfig.nav\n      );\n    },\n\n    shouldShowSidebar() {\n      const { frontmatter } = this.$page;\n      return (\n        !frontmatter.layout &&\n        !frontmatter.home &&\n        frontmatter.sidebar !== false &&\n        this.sidebarItems.length\n      );\n    },\n\n    sidebarItems() {\n      return resolveSidebarItems(\n        this.$page,\n        this.$route,\n        this.$site,\n        this.$localePath\n      );\n    },\n\n    pageClasses() {\n      const userPageClass = this.$page.frontmatter.pageClass;\n      return [\n        {\n          \"no-navbar\": !this.shouldShowNavbar,\n          \"sidebar-open\": this.isSidebarOpen,\n          \"no-sidebar\": !this.shouldShowSidebar\n        },\n        userPageClass\n      ];\n    }\n  },\n\n  mounted() {\n    window.addEventListener(\"scroll\", this.onScroll);\n\n    // configure progress bar\n    nprogress.configure({ showSpinner: false });\n\n    this.$router.beforeEach((to, from, next) => {\n      if (to.path !== from.path && !Vue.component(to.name)) {\n        nprogress.start();\n      }\n      next();\n    });\n\n    this.$router.afterEach(() => {\n      nprogress.done();\n      this.isSidebarOpen = false;\n    });\n\n    this.$on(\"sw-updated\", this.onSWUpdated);\n\n    const keyPage = this.$site.themeConfig.keyPage\n    if (!keyPage) {\n      this.isHasKey =  true\n      return\n    }\n\n    const keys = keyPagekeys\n    this.isHasKey = keys && keys.indexOf(sessionStorage.getItem('key')) > -1\n  },\n\n  methods: {\n    tagChange () {\n      this.valineRefresh = true\n      setTimeout(() => {\n        this.valineRefresh = false\n      }, 300)\n    },\n    toggleSidebar(to) {\n      this.isSidebarOpen = typeof to === \"boolean\" ? to : !this.isSidebarOpen;\n    },\n\n    // side swipe\n    onTouchStart(e) {\n      this.touchStart = {\n        x: e.changedTouches[0].clientX,\n        y: e.changedTouches[0].clientY\n      };\n    },\n\n    onTouchEnd(e) {\n      const dx = e.changedTouches[0].clientX - this.touchStart.x;\n      const dy = e.changedTouches[0].clientY - this.touchStart.y;\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && this.touchStart.x <= 80) {\n          this.toggleSidebar(true);\n        } else {\n          this.toggleSidebar(false);\n        }\n      }\n    },\n\n    onSWUpdated(e) {\n      this.swUpdateEvent = e;\n    }\n  }\n};\n",{"version":3,"sources":["Layout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Layout.vue","sourceRoot":"node_modules/vuepress-theme-reco","sourcesContent":["<template>\n  <div\n    class=\"theme-container\"\n    :class=\"pageClasses\"\n    @touchstart=\"onTouchStart\"\n    @touchend=\"onTouchEnd\">\n    <Password v-if=\"!isHasKey\"></Password>\n\n    <div v-else>\n      <Navbar v-if=\"shouldShowNavbar\" @toggle-sidebar=\"toggleSidebar\"/>\n\n      <div class=\"sidebar-mask\" @click=\"toggleSidebar(false)\"></div>\n\n      <Sidebar :items=\"sidebarItems\" @toggle-sidebar=\"toggleSidebar\">\n        <slot name=\"sidebar-top\" slot=\"top\"/>\n        <slot name=\"sidebar-bottom\" slot=\"bottom\"/>\n      </Sidebar>\n\n      <div class=\"custom-layout\" v-if=\"$page.frontmatter.layout\">\n        <component :is=\"$page.frontmatter.layout\"/>\n      </div>\n\n      <Home v-else-if=\"$page.frontmatter.home\"/>\n\n      <Page v-else :sidebar-items=\"sidebarItems\" @tagChange=\"tagChange\">\n        <slot name=\"page-top\" slot=\"top\"/>\n        <slot name=\"page-bottom\" slot=\"bottom\"/>\n      </Page>\n\n      <Valine :valineRefresh=\"valineRefresh\"></Valine>\n\n      <router-view></router-view>\n      <SWUpdatePopup :updateEvent=\"swUpdateEvent\"/>\n      <BackToTop></BackToTop>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport nprogress from \"nprogress\";\nimport Home from \"./pages/Home/\";\nimport Navbar from \"./components/Navbar/\";\nimport Page from \"./pages/Page/\";\nimport Sidebar from \"./components/Sidebar/\";\nimport SWUpdatePopup from \"./components/SWUpdatePopup/\";\nimport { resolveSidebarItems } from \"./util/\"\nimport BackToTop from \"./components/BackToTop/\"\nimport Valine from './components/Valine/'\nimport Password from './components/Password/'\n\nexport default {\n  components: { Home, Page, Sidebar, Navbar, SWUpdatePopup, BackToTop, Valine, Password },\n\n  data() {\n    return {\n      isSidebarOpen: false,\n      swUpdateEvent: null,\n      valineRefresh: false,\n      isHasKey: true\n    };\n  },\n\n  computed: {\n    shouldShowNavbar() {\n      const { themeConfig } = this.$site;\n      const { frontmatter } = this.$page;\n      if (frontmatter.navbar === false || themeConfig.navbar === false) {\n        return false;\n      }\n      return (\n        this.$title ||\n        themeConfig.logo ||\n        themeConfig.repo ||\n        themeConfig.nav ||\n        this.$themeLocaleConfig.nav\n      );\n    },\n\n    shouldShowSidebar() {\n      const { frontmatter } = this.$page;\n      return (\n        !frontmatter.layout &&\n        !frontmatter.home &&\n        frontmatter.sidebar !== false &&\n        this.sidebarItems.length\n      );\n    },\n\n    sidebarItems() {\n      return resolveSidebarItems(\n        this.$page,\n        this.$route,\n        this.$site,\n        this.$localePath\n      );\n    },\n\n    pageClasses() {\n      const userPageClass = this.$page.frontmatter.pageClass;\n      return [\n        {\n          \"no-navbar\": !this.shouldShowNavbar,\n          \"sidebar-open\": this.isSidebarOpen,\n          \"no-sidebar\": !this.shouldShowSidebar\n        },\n        userPageClass\n      ];\n    }\n  },\n\n  mounted() {\n    window.addEventListener(\"scroll\", this.onScroll);\n\n    // configure progress bar\n    nprogress.configure({ showSpinner: false });\n\n    this.$router.beforeEach((to, from, next) => {\n      if (to.path !== from.path && !Vue.component(to.name)) {\n        nprogress.start();\n      }\n      next();\n    });\n\n    this.$router.afterEach(() => {\n      nprogress.done();\n      this.isSidebarOpen = false;\n    });\n\n    this.$on(\"sw-updated\", this.onSWUpdated);\n\n    const keyPage = this.$site.themeConfig.keyPage\n    if (!keyPage) {\n      this.isHasKey =  true\n      return\n    }\n\n    const keys = keyPagekeys\n    this.isHasKey = keys && keys.indexOf(sessionStorage.getItem('key')) > -1\n  },\n\n  methods: {\n    tagChange () {\n      this.valineRefresh = true\n      setTimeout(() => {\n        this.valineRefresh = false\n      }, 300)\n    },\n    toggleSidebar(to) {\n      this.isSidebarOpen = typeof to === \"boolean\" ? to : !this.isSidebarOpen;\n    },\n\n    // side swipe\n    onTouchStart(e) {\n      this.touchStart = {\n        x: e.changedTouches[0].clientX,\n        y: e.changedTouches[0].clientY\n      };\n    },\n\n    onTouchEnd(e) {\n      const dx = e.changedTouches[0].clientX - this.touchStart.x;\n      const dy = e.changedTouches[0].clientY - this.touchStart.y;\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && this.touchStart.x <= 80) {\n          this.toggleSidebar(true);\n        } else {\n          this.toggleSidebar(false);\n        }\n      }\n    },\n\n    onSWUpdated(e) {\n      this.swUpdateEvent = e;\n    }\n  }\n};\n</script>\n\n<style src=\"prismjs/themes/prism-tomorrow.css\"></style>\n<style src=\"./styles/theme.styl\" lang=\"stylus\"></style> \n\n"]}]}